function add256(x:u256, y:u256) -> (z:u256)
{
  let carry:bool := false
  let x1:u64, x2:u64, x3:u64, x4:u64 := split256(x)
  let y1:u64, y2:u64, y3:u64, y4:u64 := split256(y)

  let r1 := addu64(x1, y1)
  carry := ltu64(r1, x1)
  // add the carry bit
  let r2 := addu64(x2, booltou64(carry))
  carry := ltu64(r2, x2)

  // add the x2 y2
  r2 := add64(x2, r2)
  carry :=  orbool(lt64(r2, x2), carry)

  // add the carry bit
  let r3 := addu64(x3, booltou64(carry))
  carry := ltu64(r3, x3)

  // add the x3 y3
  r3 := add64(x3, r3)
  carry :=  orbool(lt64(r3, x3), carry)

  // add the carry bit
  let r4 := addu64(x4, booltou64(carry))
  // add the x4 y4
  r4 := add64(x4, r4)

	z := combine256(x1, x2, x3, x4)
}
